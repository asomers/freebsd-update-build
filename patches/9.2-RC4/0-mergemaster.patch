Index: usr.sbin/mergemaster/mergemaster.sh
===================================================================
--- usr.sbin/mergemaster/mergemaster.sh	(revision 255476)
+++ usr.sbin/mergemaster/mergemaster.sh	(working copy)
@@ -707,7 +707,7 @@ case "${RERUN}" in
   # Build the mtree database in a temporary location.
   case "${PRE_WORLD}" in
   '') MTREENEW=`mktemp -t mergemaster.mtree`
-      mtree -ci -p ${TEMPROOT} -k size,md5digest > ${MTREENEW} 2>/dev/null
+      mtree -nci -p ${TEMPROOT} -k size,md5digest > ${MTREENEW} 2>/dev/null
       ;;
   *) # We don't want to mess with the mtree database on a pre-world run or
      # when re-scanning a previously-built tree.
Index: usr.sbin/mtree/create.c
===================================================================
--- usr.sbin/mtree/create.c	(revision 255476)
+++ usr.sbin/mtree/create.c	(working copy)
@@ -208,7 +208,7 @@ statf(int indent, FTSENT *p)
 		output(indent, &offset, "mode=%#o", p->fts_statp->st_mode & MBITS);
 	if (keys & F_NLINK && p->fts_statp->st_nlink != 1)
 		output(indent, &offset, "nlink=%u", p->fts_statp->st_nlink);
-	if (keys & F_SIZE)
+	if (keys & F_SIZE && S_ISREG(p->fts_statp->st_mode))
 		output(indent, &offset, "size=%jd",
 		    (intmax_t)p->fts_statp->st_size);
 	if (keys & F_TIME)
